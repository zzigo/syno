import esbuild from "esbuild";
import process from "process";
import { builtinModules } from "module"; // Use Node.js built-in modules

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the GitHub repository of this plugin
*/
`;

const prod = process.argv.includes("production");

const config = {
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		"tone", // Ensure `tone` is external to avoid bloating the bundle
		...builtinModules, // Use Node.js built-in modules list
	],
	format: "cjs",
	target: "es2020", // Modern JavaScript target for better performance
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
	minify: prod,
};

async function build() {
	if (prod) {
		await esbuild.build(config);
		process.exit(0);
	} else {
		const ctx = await esbuild.context(config);
		await ctx.watch();
	}
}

build().catch((err) => {
	console.error(err);
	process.exit(1);
});
